{
  "name": "Zybil",
  "functions": [
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "contract_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "storage_slot",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "preimage",
          "type": {
            "kind": "array",
            "length": 3,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "signer",
          "type": {
            "kind": "struct",
            "path": "types::public_key::Pubkey",
            "fields": [
              {
                "name": "x",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "y",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "encode_msg",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "msg",
          "type": {
            "kind": "array",
            "length": 2,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 33,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        }
      ],
      "bytecode": "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Ij+Pe79+6BqPEMu+D8jcj743eb0nPtY19Igfd8r/0R+T/6MVj+V4DoVruIZruIZruIZruIZruIZruIZruIZruIZruIZruG5LromObV5mF75Pwe/7krwgFbbH7/Z1b1eXtfh70CPWbWF2vd9gPk/fqdxPOS2SA1ir6THPWLfF66jS1+9/cL/M5vKT77fhe2nw3RHOrS3z7zfzPe7xGOa2vsdjkXL9Djna+zx03rfn6nv0XTp+j4Mv9m6N8QBrNT3mhFKPHcsY95VpfI8er8E143vh7u6aw+y7M/bAfnIsUp/vObuzq8vs+0O+P3aRGMy9oy93gbn47t3er7ua+qev27IffL8tniNw1hreVXkc979l5vD9r3c55/xY9+KCpa8hJ1Oud1W87yVvnOfXE9RtM+XicV/xY93DyvcVbzbu/V3yVvewOt5XXM15teHy+xUey+9X9nneTQ5vIgpYResfVH6uLiJryubom8y6IqxPGt3EHeZmL5QbxrZxbDuNbeex7TK2Xce229h2H9seY9tzbHuNbe+x7TO2fce239j2H9sBYztwbJsK/+CxHULJ8yYcXzZm1zI+8byzz7lo0/kXXrDp/HM3nXX+heed/eofAlhYjM8EdQEA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "format_eth_msg",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "owner",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_eth_address",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "owner",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_score",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "owner",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "integer",
          "sign": "unsigned",
          "width": 8
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_stamp_ids",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "owner",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "initialize",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "signer_x",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "signer_y",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "stamp_ens",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "redemption_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "name",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "msg_key",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "consumption_secret",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "stamp_ethkey",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "pubkey_x",
          "type": {
            "kind": "array",
            "length": 32,
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            }
          },
          "visibility": "private"
        },
        {
          "name": "pubkey_y",
          "type": {
            "kind": "array",
            "length": 32,
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            }
          },
          "visibility": "private"
        },
        {
          "name": "signature",
          "type": {
            "kind": "array",
            "length": 64,
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "stamp_web2",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "signature",
          "type": {
            "kind": "array",
            "length": 64,
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            }
          },
          "visibility": "private"
        },
        {
          "name": "msg",
          "type": {
            "kind": "array",
            "length": 2,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "eJztnN1OGzEQRt9lryPkGf/nVapeoJZKSAiqwh3KuzeoxBstlkeZODNda68AySaHL8OZnWzi9+np5cf92+PL8+u0f5/stP/2Pr3+vn/++On17f7P27Q3u+nh+efx62E3/Xp8epj2cNh9WQXW+vy58vh9grLa+tpyh8adljsM1HIbsKw2bl6cD993k1sntl8ndlgndlwndlondl4nNpiVcsNKuXGl3CvtlLDSVgkr7ZWw0mYJK+2WsNJ2CZL98rimkNicruHGar/EmE7omIIj6KPzhT6G+W+16dapY7Vr3pS+Z/bV3nkhfTaFPiGc0388QrXLXfgIMbYeodqPLnuEZEtINiOSz4Cf68eluASqNpqbAoU0l0Q0fglU7SCaQNXWoAlUdb4mUFXmikC2g6X7AnUQb1+gDi7tC9RBvX2B5E1NAMmbOlo/A3lcAsmbmgCSNzUBJG9qAkje1G0gJ29qAkje1ASQvKkJIHlTE0DypiaAFEydQgFKxi6BFEzdBlIwdRtIwdRtIAVTN4G8gqnbQAqmbgMpmLoNpGDqNpCCqdtA4qb2aMorUB5h+XKMFzc1BSRuagpI3NQUkLipCaAgbmoKSNzUFJC4qSkgcVNTQOKmpoAUTO3DDBTdEkjB1G0gBVO3gRRM3QZSMHUTKCqYug2kYOo2kIKp20AKpm4DKZi6DSRvaotz67A2LYHkTU0AyZuaAJI3NQEkb+o2UJI3NQEkb2oCSN7UBJC8qQkgeVMTQOKmDhjKLc5gTV4CiZs6WIwzUFr2siRu6uAACpD7cmshiZs6pDAnlPFLQuKmDtnhDJSXg2IWN3U0UO4GRROX/2VZ3NTR5HKBFiEv34OWxU0d0ZQ3bEZMy3c2ZHFTR4vzU2ZtaC8P1n4uDn5+dkNtqbdw4vDH6+T59zI+USLeLi5MJZ5+dzj7J6ymAibPb20BA9jOxRk4KceZmK8KUbzF3S5EgPleBqC17VxywlPV5pSvC1G8LY8YovilxIghil/+jBii+CXbgCGCkb/OHDFF+YvjEVOUv6IfMcX/fQxZR4oDjS2KKW5zS48Ut8GlR4rb5NIjxW106ZHiNrt0SLF+6suW4oUpjjS72JLL8XtPBJOtPX2mPDtjrktxpNlFL8WRZhe9FEeaXfRSHGl20UtxpNlFL8WRZhe9FEeaXfRSHGl2UUuxxwlcW4o9TgLbUuxxItmWYo9T17YU5U+WGzLFbXbpkeI2u/RIcaTZJeZyCiWkeGUw//k44uMJJDpLBNP8S+1dtQTAzEd6mrzc5DibPGdT4GyKnE2JsylzNoFh7QLWLmTtYlUFsMoCWHUBrMIAVmUAqzSAVRvIqg1k1QbiXbWJQjnA+PyMBO/+HS58VzVjKB8pingmavzcU31ZgthTv4NIbaoOna1NmVXrmVXrmVXrmVXrmVXrmadBpgd5IjQ8ExqeCg3PhYYnQ8OzoeHp0PB8aHhCNLwq4bZLXpUwGyazYzJbJrNnMpsms2sy2yavbwKvcQKvcwLyqgR5VYK8KkFelSCvSpBXJcioksPhL7v8IoQ=",
      "",
      "eJzN3M2qZNlxBtB3qbEwGfs/9SrGA2HLIBCSsTQTencfQ2dJoLN7cyMT7hp1NeTXHVRGRt/68qz+248//vk/f/fXP/z5T3/58du//Xj82/jx23//24+//M/v/vT/f/+Xv/7uf//647eP3/z4/Z/+6/rr33/z47//8Mff//ht/P03//Kq0mLUX155/XrOn6+u6/bl5fH4+fIS7Z9f/h+/uWaZ0CwLmuUJzRIPaZiQhinSMFUapknDdGkY6fyGdH9DOsAhXeAiXeAiXeAiXeAiXeAiXeAiXeAiXeAiXeAiXeAiXeAqXeAqXeAqXeAqXeAqXeAqXeAqXeAqXeAqXeAqXeAmXeAmXeAmXeAmXeAmXeAmXeAmXeAmXeAmXeAmXeAuXeAuXeAuXeAuXeAuXeAuXeAuXeAuXeAuXeAuXeAhXeAhXeAhXeAhXeAhXeAhXeAhXeAhXeAhXeAhXeApXeApXeApXeApXeApXeApXeApXeApXeApXeApXeAlXeAlXeAlXeAlXeAlXeAlXeAlXeAlXeAlXeAlXeCndIGf0gV+Shf4KV3gp3SBn9IFfkoX+Cld4Kd0gZ/SBY6HdILjId3geEhHOB7SFY6HdIbjId3heEiHOB7SJY6HdIrjQd1ijMdRt9gCcpaQs4icZeQsJGcpOYvJUU4uKCgXlJQLisoFZeWCwnJBabmguFxQXi4oMBeUmAuKzAVl5oJCc0GpuaDYXFBuLig4F5ScC4rOBWXngsJzQem5oPhcUH4uKEAXlKALitAFZeiCQnRBKbqgGF1Qji4oSBeUpAuK0gVl6YLCdEFpuqA4XVCeLihQF5SoC4rUBWXqgkJ1Qam6oFhdUK4uKFgXlKwLitYFZeuCwnVB6bqgeF1Qvi4oYBeUsAuK2AVl7IJCdkEpu6CYXVDOLihoF5S0C4raBWXtgsJ2QWm7oLhdUN4uKHAXlLgLitwFZe6CQndBqbug2F1Q7q5Q7q5Q7q5Q7q5Q7q48pFtcKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKHdXKXdXKXdXKXdXKXdXH9ItrpS7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7q5S7a5S7a5S7a5S7a5S7aw/pFjfK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3TXK3XXK3XXK3XXK3XXK3fWHdIs75e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e465e4G5e4G5e4G5e4G5e7GQ7rFg3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3g3J3k3J3k3J3k3J3k3J38yHd4km5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0m5u0W5u0W5u0W5u0W5u/WQbvGi3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2i3N2TcndPyt09KXf3pNzd8yHd4ifl7p6Uu3tS7u5Jubsn5e6elLt7Uu7uSbm7J+XunpS7e1Lu7km5uyfl7p6Uu3tS7u5Jubsn5e6elLt7Uu7uSbm7J+XunpS7e1Lu7km5uyfl7p6Uu3tS7u75nrv7lX98bpq3bvHHp3nrFn98mrdu8ceneesWf3yat27xx6d56xZ/fJq3bvGnp3nP3X18mrdu8cenoW7xe+7u49NQt/g9d/fxaahb/J67+/g01C1+z919epr33N3Hp6Fu8Xvu7uPTULf4PXf38WmoW/yeu/v4NNQtfs/dfXwa6ha/5+4+Pg11i99zdx+fhrrF77m7j09D3eL33N3Hp6Fu8Xvu7uPTULf4PXf38WmoW/yeu/v4NNQtfs/dfXwa6ha/5+4+Pg11i99zdx+fhrrF77m7j09D3eL33N3Hp6Fu8Xvu7uPTULf4PXf38WmoW/yeu/v4NNQtfs/dfXwa6ha/5+4+Pg11i99zdx+fhrrF77m7j09D3eL33N3Hp5FucTzeg3efH0e6xtc40jm+xpHu8TWOdJCvcaSLfI0jneRrHOkmX+NIR/kax7rK7xG8z49jXeX3EN7nx7Gu8nsM7/PjWFf5PYj3+XGsq/wexfv8ONZVfg/jfX4c6yq/x/E+P451ld8DeZ8fx7rK75G8z49jXeX3UN7nx7Gu8nss7/PjWFeZgnnXONZVpmjeNY51lSmcd41jXWWK513jWFeZAnrXONZVpojeNY51lSmkd41jXWWK6V3jWFeZgnrXONZVpqjeNY51lSmsd41jXWWK613jWFeZAnvXONZVpsjeNY51lSm0d41jXWWK7V3jWFeZgnvXONZVpujeNY51lSm8d41jXWWK713jWFeZAnzXONZVpgjfNY51lSnEd41jXWWK8V3jWFeZgnzXONZVpijfNY51lSnMd41jXWWK813jWFeZAn3XONZVpkjfNY51lSnUd41jXWWK9V3jWFeZgn3XONZVpmjfNQ51lcOyfWHZvrBsX1i2Lx7UVQ7L9oVl+8KyfWHZvrBsX1i2LyzbF5btC8v2hWX7wrJ9Ydm+sGxfWLYvLNsXlu0Ly/aFZfvCsn1h2b6wbF9Yti8s2xeW7QvL9oVl+8KyfWHZvrBsX1i2LyzbF5btC8v2hWX7wrJ9Ydm+sGxfWLYvLNsXlu0Ly/aFZfvCsn1h2b6wbF9Yti8s2xeW7QvL9oVl+8KyfWHZvrBsX1i2LyzbF5btC8v2hWX7wrJ9Ydm+sGxfWLYvLNsXlu0Ly/aFZfvCsn1h2b6wbF9Yti8s2xeW7QvL9oVl+8KyfWHZvrBsX1i2LyzbF5btC8v2hWX7wrJ9Ydm+sGxfWLYvLNsXlu0Ly/aFZfvCsn1h2b6wbF9Yti8s21cs21cs21cs21cs21ce1FUulu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu0rlu2rlu2rlu2rlu2rlu2rD+oqV8v2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Vcv2Ncv2Ncv2Ncv2Ncv2tQd1lZtl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+5pl+7pl+7pl+7pl+7pl+/qDusrdsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3dsn3Dsn3Dsn3Dsn3Dsn3jQV3lYdm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+Ydm+adm+adm+adm+adm++aCu8rRs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Rs37Js37Js37Js37Js33pQV3lZtm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztm9Ztu9p2b6nZfuelu17Wrbv+bi9yqs/6y/BNf4pdzfUGO2Xl47n+PnKcvfSeKzXPBEx//nFr3Fur/L3jXN7lb9vnNur/H3j3F7l7xvn9ip/2zj3tu/7xrm9yt83zu1V/r5xbq/y941jXeV72/d941hX+d72fd841lW+t33fNs697fu+cayrfG/7vm8c6yrf277vG8e6yve27/vGsa7yve37vnGsq3xv+75vHOsq39u+7xvHusr3tu/7xrGu8r3t+75xrKt8b/u+bxzrKt/bvu8bx7rK97bv+8axrvK97fu+cayrfG/7vm+cL17lV+yL1/MV++KV+yV2b9rOsS9ejVfsi5/uV+yLn8JX7Iufllfsi1v9in1x+16x3Jbcm6BzLLcl98bmHMttyb1ZOcdyW3JvQM6x3Jbcm4pzLLcl90bhHMttyf0z/+dYbkvun6E/x3Jbcv9M+jmW25L7Z7zPsdyW3D8zfY7ltuT+GeRzLLcl98/0nmO5Lbl/RvYcy23J/TOn51huS+6f4TzHclty/0zkOZbbkvtnDM+x3JbcP7N3juW25P4ZuHMstyX3z5SdY5ktKY/7Z7TOscyWXLHMllyxzJZcscyWXLHMllyxzJZcscyWXLHMllyx3JZ89ZmRVyy3JV99BuMVy23JV59peMVyW/LVZwResdyWfPU791cstyVf/Q77FcttyVe/E37Fclvy1e9YX7Hclnz1O8tXLLclX/0O8BXLbclXv1N7xXJb8tXvqF6x3JZ89TufVyy3JV/9DuUVy23JV7+TeMVyW/LVjv8Vy23JVzvzVyy3JV/toF+x3JZ8tdN9xXJbkuper1huS1Ld6xXLbUmqe71iuS1Jda9XLLclqe71iuW2JNW9XrHclqS61yuW25JU93rFcluS6l6vWG5LUt3rFcttSap7vWK5LUl1r1cstyWp7vWK5bYk1b1esdyWpLrXK5bbklT3esVyW5LqXq9YbktS3esVy21Jqnu9YrktSXWvVyy3Janu9YrltiTVvV6x3JakutcrltuSVPd6xXJbkuper1huS1Ld6xVLbUnkutfIda+R614j171GrnuNXPcaue41ct1r5LrXyHWvketeI9e9Rq57jVz3GrnuNXLda+S618h1r5HrXiPXvUaue41c9xq57jVy3WvkutfIda+R614j171GrnuNXPcaue41ct1r5LrXyHWvketeI9e9Rq57jVz3GrnuNXLda+S618h1r5HrXiPXvUaue41c9xq57jVy3WvkutfIda+R614j171GrnuNXPcaue41ct1r5LrXyHWvketeI9e9Rq57jVz3GrnuNXLda+S618h1r5HrXiPXvUaue41c9xq57jVy3WvkutfIda+R614j171GrnuNXPcaue41ct1r5LrXyHWvketeI9e9Rq57jVz3GrnuNXLda+S618h1r5HrXiPXvUaue41c9xq57jVy3WvkutfIda+R614j172WXPdaNrXms85X7FmfN7H7N+AYu/8teY7Hz9iIm9jtb8nz8YhfYtcv67/G7ovGc+z2g3OO3X5wzrHbD845dvu+nWO379s5dvvBOcduPzjn2O2WnGO5LbkvGs+x3JbcF43nWG5L7ovGcyy3JfdF4zmW25L7ovH5KP1nrMyb2GZLDrH7ovEc22zJKbbZklNssyWn2GZLTrHNlpximy05xTZbcorltuS+aDzG7ovGcyy3JfdF4zmW25L7ovEcy23JfdF4juW25L5oPMdyW3JfNJ5juS25LxrPsc0b0P8R63exzRtwiN23as/HXD9j6+an1/tW7Rn9+YrF3c+T963aOXb/wTnG7j84x9j9B+cYu3/fjrH79+0Yu//gHGP3H5xT7L5VO8dyW3Lfqp1juS25b9XOsdyW3Ldq51huS+5btXMstyX3rdozVv0ZW/0mttmSU2yzJafYZktOsc2WnGKbLTnFNltyim225BTbbMkpttmSQ+y+VTvHclty36qdY7ktuW/VzrHclty3audYbkvuW7VzLLUl9b5VO8dSW1Lvn2g8x1JbUu+rv3Ps/g24/sz6il1/oLyJ3b8Bp9imVSv/+Hmy3Pw3oG5atdp+xuq6i93/lhxj9x+cY+z+g3OM3X9wjrH79+0U2xRWp/dtU1id3rdNYXWM3b8Bx9j9G3D96P0zNv+1xa6bwuoY23xwTrHNB+cQ2xRWx9j95TrGNltyiuW2ZFNYHWO5LdkUVsfYZktOsc2WnGKbLTnENoXVMbbZklMsd8w3hdUxltuSTWF1jOW2ZFNYHWO5LdkUVqfYprA6xnJbsimsjrHcltw/GXeO5bZk06odY7kt2bVqv17G1U2rdijj6qZVO8Y2dfQptqmj189YPMpNbFNHn2KbNvQU27Shp9imjj7FNnX0IbZp1Y6x3JZsWrVjLLclm1btGNtsySm22ZJTbLMlp9hmS06xzZYcYptW7RjLbcmmVTvGcluyadWOsdyWbFq1Yyy3JZtW7RjLbcmmVTvGcluyadWOsdyWbFq1Yyy3JZunxw5PWNXN02PPn38QW8/5r/+2tnl67Bi7f8bwGLt/xvAYu3/G8Bi7fd/Osc0jbqfY/TOGx9j9M4bH2O6BukMstyUbuXuM5bZkI3ePsdyWbOTuMZbbko3cPcZyW7KRu8dYbks2cvcYy23JRu4eY7kt2cjdYyy3JRu5e4zltmQjd4+x3JZs5O4xltuSjdw9xnJbspG7x1huSzZy9xjLbclG7h5juS3ZyN1jLLclG7l7jOW2ZCN3j7Hclmzk7jGW25KN3D3GcluykbvHWG5LNnL3GMttyUbuHmO5LdnI3WMstyUbuXuM5bZkI3ePsdyWbOTuMZbbko3cPcZyW7KRu8dYbks2cvcYy23JRu4eY7kt2cjdYyy3JRu5e4zltmQjd4+x3JZs5O4xltuSjdw9xnJbspG7x1huSzZy9xjLbclG7h5juS3ZyN1jLLclG7l7jOW2ZCN3j7Hclmzk7jGW25KN3D3Gcluy615PsdSW9Fz32nPda891rz3XvfZc99pz3WvPda891732XPfac91rz3WvPde99lz32nPda891rz3XvfZc99pz3WvPda891732XPfac91rz3WvPde99lz32nPda891rz3XvfZt9/qr/2OEvu1efz227V4Psd2WHGK7LTnEdltyiO225BDbbckhttuSQ2y3JYdYbku23euvx7bd6yGW25Jt93qI5bZk270eYrkt2Xavh1huS7bd6yGW25Jt93qI5bZk273uYn//+/8BuJ1Yrg==",
      "",
      "",
      "",
      "",
      "",
      "",
      "eJzVWF2L2zAQ/C9+DkFaSfuRv1LuIbRXODhypclb8H8/J1iSwSu5Uek1eooDM8tovLsjfB3eP74fL28fp/NwuA5Iw+HbdTj/Op5uf8+X4+/LcDC74fX0Y/odd8PPt/fX4WDH3QplnQsyI6dntgntggb3YHyEe8AtuENIaOMzWMaX3YDcqW7pUzeZTnXbTnVDp7pdp7p9p7pDp7qxU92d5iV1mpfUaV5yp3nJneYld5qX/JV5OWGSEif8V7rVvCRMzhBaXKi/UdSoqlPUlKhT1AVdp6i7sU5R11KVIupGqFPUYaxT1DmoU9QWrFMKbx8ThYyr9i6HMENZcnGChxtRCl3151KEbCxvgOtaYJr3GQxhMflqXeNmqEAeZPJ31YXGfnLVhdl6ctWF8X5y1YUNs1ANUo8HgLTul9t+qr8GE8cjMlCCei0YPMd4CgvfgmqGM8kM5/IRWVS9JumFsAEGmwr7bMPdOWsKm/b/Wxdssg7NhnVIM9TZDPX88IK0ppAi/8gOgVhX2C/tuGspxNMXaJGVFj33OL1OEktVLT5FpA85xMJsu56RD5QPCYq3G1our7gisbGA8kEdNnSLnqcPyEYfRxMprFzRg488p/KBq+VBohLHi8Ew96+rtFcjajpVurEbWX9LbmJJC4tME8s2saCJ5ZpYvokVmljYxGrqDWrqDWrqDW7qDW7qDW7qDW7qDWnqjSnG22h2r174fIhrL9i8InG+Mri9upiA4y5zbr3hC25skVR5WyT1OlgnNdqOe6teoIIRJY4Qx5dx/ATorjR2"
    ],
    "fileMap": {
      "1": {
        "source": "mod types;\nmod util;\n\ncontract Zybil {\n    use dep::aztec::{\n        constants_gen::{MAX_NOTES_PER_PAGE},\n        context::Context,\n        hash::{compute_secret_hash, sha256_to_field},\n        note::{\n            note_viewer_options::NoteViewerOptions,\n            note_header::NoteHeader,\n            utils as note_utils\n        },\n        selector::compute_selector,\n        types::{\n            address::{AztecAddress, EthereumAddress},\n            type_serialization::field_serialization::{\n                FieldSerializationMethods, FIELD_SERIALIZED_LEN\n            },\n        },\n        oracle::get_public_key::get_public_key,\n        log::emit_encrypted_log,\n        state_vars::{map::Map, public_state::PublicState, set::Set}\n    };\n    use crate::{\n        types::{\n            public_key::{ Pubkey, PubkeyMethods, PUBKEY_SERIALIZED_LEN },\n            stamp_note::{ StampNote, StampNoteMethods, STAMP_SERIALIZED_NOTE_LEN }\n        },\n        util::{\n            get_ens_stamp_private_content_hash,\n            filter_eth_address_stamp,\n            STAMP_ID,\n            STAMP_SCORE\n        },\n    };\n    use dep::std::option::Option;\n\n    global STAMP_SCORES = [\n    STAMP_SCORE::ETHEREUM, \n    STAMP_SCORE::ENS, \n    STAMP_SCORE::GOOGLE, \n    STAMP_SCORE::DISCORD, \n    STAMP_SCORE::GITHUB\n];\n\n    mod StorageSlots {\n        global BACKEND_ID = 1;\n        global STAMP_TYPE_ID = 2;\n        global STAMPS_ID = 3;\n        global SIGNER_ID = 4;\n    }\n\n    struct Storage {\n        registered_signer: PublicState<Pubkey, PUBKEY_SERIALIZED_LEN>,\n        stamp_type: Map<PublicState<Field, FIELD_SERIALIZED_LEN>>,\n        stamps: Map<Set<StampNote, STAMP_SERIALIZED_NOTE_LEN>>\n    }\n\n    impl Storage {\n        fn init(context: Context) -> pub Self {\n            Storage {\n                registered_signer: PublicState::new(\n                    context,\n                    StorageSlots::SIGNER_ID,\n                    PubkeyMethods\n                ),\n                stamp_type: Map::new(\n                    context,\n                    StorageSlots::STAMP_TYPE_ID,\n                    |context, slot| PublicState::new(\n                        context,\n                        slot,\n                        FieldSerializationMethods\n                    )\n                ),\n                stamps: Map::new(\n                    context,\n                    StorageSlots::STAMPS_ID,\n                    |context, slot| Set::new(\n                        context,\n                        slot,\n                        StampNoteMethods\n                    )\n                ),\n            }\n        }\n    }\n\n    #[aztec(private)]\n    fn constructor(signer: Pubkey) {\n        // Set registered signer\n        let selector = compute_selector(\"initialize(Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [signer.x, signer.y]);\n        // set the backend address based on the sender\n        // setup bridge\n        // let selector = compute_selector(\"_initialize((Field))\");\n        // context.call_public_function(context.this_address(), selector, )\n    }\n\n    #[aztec(private)]\n    fn stamp_ens(\n        redemption_hash: Field,\n        name: Field,\n        timestamp: Field,\n        msg_key: Field,\n        consumption_secret: Field\n    ) {\n        // Retrieve Eth Address from stamps. Use as canceller, will fail if wrong eth address stamped/ provided\n        let eth_address = get_eth_address(context.msg_sender());\n\n        // consume L1 to L2 and emit nullifier\n        let content_hash = get_ens_stamp_private_content_hash(\n            redemption_hash,\n            name,\n            timestamp,\n            eth_address\n        );\n\n        // CONSUME L1 MESSAGE TO L2\n        context.consume_l1_to_l2_message(msg_key, content_hash, consumption_secret);\n\n        // CREATE NEW ENS STAMP AND STORE IN SET\n        let mut stamp = StampNote::new(\n            context.msg_sender(),\n            STAMP_ID::ENS,\n            name\n        );     \n        storage.stamps.at(context.msg_sender()).insert(&mut stamp, false); \n\n        // EMIT ENCRYPTED LOG OF STAMP CREATION\n        emit_encrypted_log(\n            &mut context,\n            context.this_address(),\n            stamp.header.storage_slot,\n            get_public_key(context.msg_sender()),\n            stamp.serialize()\n        );\n    }\n\n    /**\n     * Generate a stamp for an Ethereum address by proving a signature over the sender's Aztec Address\n     *\n     * @param pubkey_x: the X coordinate of the full public key for an secp256k1 key (Ethereum)\n     * @param pubkey_y: the Y coordinate of the full public key for an secp256k1 key (Ethereum)\n     * @param signature: the signature on the sender's aztec address by given pubkey\n     */\n    #[aztec(private)]\n    fn stamp_ethkey(pubkey_x: [u8; 32], pubkey_y: [u8; 32], signature: [u8; 64]) {\n        // convert msg.sender eth signature message format\n        let message = format_eth_msg(context.msg_sender());\n        // check signature\n        let valid_signature = dep::std::ecdsa_secp256k1::verify_signature(\n            pubkey_x,\n            pubkey_y,\n            signature,\n            message\n        );\n        assert(valid_signature);\n\n        // convert pubkey to EthAddress\n        let mut pubkey: [u8; 64] = [0; 64];\n        for i in 0..32 {\n            pubkey[i] = pubkey_x[i];\n            pubkey[i + 32] = pubkey_y[i];\n        };\n        let pubkeyHash = dep::std::hash::keccak256(pubkey, 64);\n        let mut address: Field = 0;\n        let mut v: Field = 1;\n        for i in 0..20 {\n            let index = 20 - i;\n            address += pubkeyHash[index + 11] as Field * v;\n            v *= 256;\n        }\n\n        // create stamp\n        let mut stamp = StampNote::new(\n            context.msg_sender(),\n            STAMP_ID::ETHEREUM,\n            address\n        );\n        storage.stamps.at(context.msg_sender()).insert(&mut stamp, false);\n\n        // emit encrypted log of stamp creation\n        emit_encrypted_log(\n            &mut context,\n            context.this_address(),\n            stamp.header.storage_slot,\n            get_public_key(context.msg_sender()),\n            stamp.serialize()\n        );\n    }\n\n   unconstrained fn get_eth_address(owner: Field) -> Field {\n        let mut address = 0; \n        let options = NoteViewerOptions::new().set_offset(0);\n        let notes = storage.stamps.at(owner).view_notes(options);\n        let filtered = filter_eth_address_stamp(notes);\n        if filtered[0].is_some() {\n            let stamp = filtered[0].unwrap_unchecked();\n            address = stamp.data;\n        }\n        address\n    }\n\n    unconstrained fn get_score(owner: AztecAddress) -> u8 {\n        let options = NoteViewerOptions::new().set_offset(0);\n        let notes = storage.stamps.at(owner.address).view_notes(options);\n        let mut sum = 0;\n        for i in 0..notes.len() {\n            if notes[i].is_some() {\n                let stamp = notes[i].unwrap_unchecked();\n                sum += STAMP_SCORES[stamp.stamp_type - 1];\n            }\n        }\n        sum\n    }\n\n    // TODO: Need to nullify stamps \n    #[aztec(private)]\n    fn stamp_web2(signature: [u8; 64], msg: [Field; 2]) {\n        // Encode msg to bytes\n        // let encoded_msg = encode_msg(msg);\n        // let Pubkey { x, y } = storage.registered_signer.read();\n        // let valid_signature = dep::std::schnorr::verify_signature(x, y, signature, encoded_msg);\n        // assert(valid_signature, \"Signature could not be verified with provided data\");\n        let mut stamp = StampNote::new(\n            context.msg_sender(),\n            msg[0] as u8,\n            msg[1]\n        );        \n        storage.stamps.at(context.msg_sender()).insert(&mut stamp, false);\n        \n        emit_encrypted_log(\n            &mut context,\n            context.this_address(),\n            stamp.header.storage_slot,\n            get_public_key(context.msg_sender()),\n            stamp.serialize()\n        );\n    }\n\n    unconstrained fn encode_msg(msg: [Field; 2]) -> [u8; 33] {\n            let mut bytes: [u8; 33] = [0; 33]; \n            let data = msg[1].to_be_bytes(32);\n            bytes[0] = msg[0] as u8;\n            for i in 0..32 {\n                bytes[i + 1] = data[i];\n            }\n            bytes\n    }\n\n    #[aztec(public)]\n    internal fn initialize(signer_x: Field, signer_y: Field) {\n        storage.registered_signer.write(Pubkey {x: signer_x, y: signer_y});\n    }\n\n\n    unconstrained fn format_eth_msg(owner: Field) ->  [u8; 32] {\n        // decompose owner into 8 bit limbs in big endian\n        let owner_bytes: [u8] = owner.to_be_bytes(32);\n\n        // construct full message preimage\n        let mut bytes: [u8; 60] = [0; 60];\n        // prefix = \"\\x19Ethereum Signed Message:\\n\"\n        let prefix: [u8; 26] = [25,  69, 116, 104, 101, 114, 101, 117, 109,  32,  83, 105, 103, 110, 101, 100,  32,  77, 101, 115, 115, 97, 103, 101,  58,  10];\n        for i in 0..26 {\n            bytes[i] = prefix[i];\n        }\n\n        bytes[26] = 51;\n        bytes[27] = 50;\n        for i in 0..32 {\n            bytes[i + 28] = owner_bytes[i];\n        }\n\n        // length of message \n        bytes[26] = 51;\n        bytes[27] = 50;\n        // message\n        for i in 0..32 {\n            bytes[i + 28] = owner_bytes[i];\n        }\n\n        // return the keccak hash of message\n        dep::std::hash::keccak256(bytes, 60)\n    }\n\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, preimage: [Field; STAMP_SERIALIZED_NOTE_LEN]) -> [Field; 4] {\n        let note_header = NoteHeader::new(contract_address, nonce, storage_slot);\n        note_utils::compute_note_hash_and_nullifier(StampNoteMethods, note_header, preimage)\n    }\n\n    unconstrained fn get_stamp_ids(owner: Field) -> [Field; MAX_NOTES_PER_PAGE] {\n        let options = NoteViewerOptions::new().set_offset(0);\n        let notes = storage.stamps.at(owner).view_notes(options);\n        let mut ids: [Field; MAX_NOTES_PER_PAGE] = [0; MAX_NOTES_PER_PAGE];\n        for i in 0..notes.len() {\n            if notes[i].is_some() {\n                let stamp = notes[i].unwrap_unchecked();\n                ids[i] = stamp.stamp_type as Field;\n            }\n        }\n        ids\n    }\n}\n",
        "path": "/home/jpag/Workground/aztec/zybil/contracts/l2/src/main.nr"
      },
      "4": {
        "source": "mod poseidon;\n\n#[foreign(sha256)]\npub fn sha256<N>(_input : [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\npub fn blake2s<N>(_input : [u8; N]) -> [u8; 32] {}\n\npub fn pedersen<N>(input : [Field; N]) -> [Field; 2] {\n    pedersen_with_separator(input, 0)\n}\n\n#[foreign(pedersen)]\npub fn pedersen_with_separator<N>(_input : [Field; N], _separator : u32) -> [Field; 2] {}\n\n#[foreign(hash_to_field_128_security)]\npub fn hash_to_field<N>(_input : [Field; N]) -> Field {}\n\n#[foreign(keccak256)]\npub fn keccak256<N>(_input : [u8; N], _message_size: u32) -> [u8; 32] {}\n\n// mimc-p/p implementation\n// constants are (publicly generated) random numbers, for instance using keccak as a ROM.\n// You must use constants generated for the native field\n// Rounds number should be ~ log(p)/log(exp)\n// For 254 bit primes, exponent 7 and 91 rounds seems to be recommended\nfn mimc<N>(x: Field, k: Field, constants: [Field; N], exp : Field) -> Field {\n    //round 0\n    let mut t = x + k;\n    let mut h = t.pow_32(exp);\n    //next rounds\n    for i in 1 .. constants.len() {\n        t = h + k + constants[i];\n        h = t.pow_32(exp);\n    };\n    h + k\n}\n\nglobal MIMC_BN254_ROUNDS = 91;\n\n//mimc implementation with hardcoded parameters for BN254 curve.\npub fn mimc_bn254<N>(array: [Field; N]) -> Field {\n    //mimc parameters\n    let exponent = 7;\n    //generated from seed \"mimc\" using keccak256 \n    let constants: [Field; MIMC_BN254_ROUNDS] = [\n        0, \n        20888961410941983456478427210666206549300505294776164667214940546594746570981,\n        15265126113435022738560151911929040668591755459209400716467504685752745317193,\n        8334177627492981984476504167502758309043212251641796197711684499645635709656,\n        1374324219480165500871639364801692115397519265181803854177629327624133579404,\n        11442588683664344394633565859260176446561886575962616332903193988751292992472,\n        2558901189096558760448896669327086721003508630712968559048179091037845349145,\n        11189978595292752354820141775598510151189959177917284797737745690127318076389,\n        3262966573163560839685415914157855077211340576201936620532175028036746741754,\n        17029914891543225301403832095880481731551830725367286980611178737703889171730,\n        4614037031668406927330683909387957156531244689520944789503628527855167665518,\n        19647356996769918391113967168615123299113119185942498194367262335168397100658,\n        5040699236106090655289931820723926657076483236860546282406111821875672148900,\n        2632385916954580941368956176626336146806721642583847728103570779270161510514,\n        17691411851977575435597871505860208507285462834710151833948561098560743654671,\n        11482807709115676646560379017491661435505951727793345550942389701970904563183,\n        8360838254132998143349158726141014535383109403565779450210746881879715734773,\n        12663821244032248511491386323242575231591777785787269938928497649288048289525,\n        3067001377342968891237590775929219083706800062321980129409398033259904188058,\n        8536471869378957766675292398190944925664113548202769136103887479787957959589,\n        19825444354178182240559170937204690272111734703605805530888940813160705385792,\n        16703465144013840124940690347975638755097486902749048533167980887413919317592,\n        13061236261277650370863439564453267964462486225679643020432589226741411380501,\n        10864774797625152707517901967943775867717907803542223029967000416969007792571,\n        10035653564014594269791753415727486340557376923045841607746250017541686319774,\n        3446968588058668564420958894889124905706353937375068998436129414772610003289,\n        4653317306466493184743870159523234588955994456998076243468148492375236846006,\n        8486711143589723036499933521576871883500223198263343024003617825616410932026,\n        250710584458582618659378487568129931785810765264752039738223488321597070280,\n        2104159799604932521291371026105311735948154964200596636974609406977292675173,\n        16313562605837709339799839901240652934758303521543693857533755376563489378839,\n        6032365105133504724925793806318578936233045029919447519826248813478479197288,\n        14025118133847866722315446277964222215118620050302054655768867040006542798474,\n        7400123822125662712777833064081316757896757785777291653271747396958201309118,\n        1744432620323851751204287974553233986555641872755053103823939564833813704825,\n        8316378125659383262515151597439205374263247719876250938893842106722210729522,\n        6739722627047123650704294650168547689199576889424317598327664349670094847386,\n        21211457866117465531949733809706514799713333930924902519246949506964470524162,\n        13718112532745211817410303291774369209520657938741992779396229864894885156527,\n        5264534817993325015357427094323255342713527811596856940387954546330728068658,\n        18884137497114307927425084003812022333609937761793387700010402412840002189451,\n        5148596049900083984813839872929010525572543381981952060869301611018636120248,\n        19799686398774806587970184652860783461860993790013219899147141137827718662674,\n        19240878651604412704364448729659032944342952609050243268894572835672205984837,\n        10546185249390392695582524554167530669949955276893453512788278945742408153192,\n        5507959600969845538113649209272736011390582494851145043668969080335346810411,\n        18177751737739153338153217698774510185696788019377850245260475034576050820091,\n        19603444733183990109492724100282114612026332366576932662794133334264283907557,\n        10548274686824425401349248282213580046351514091431715597441736281987273193140,\n        1823201861560942974198127384034483127920205835821334101215923769688644479957,\n        11867589662193422187545516240823411225342068709600734253659804646934346124945,\n        18718569356736340558616379408444812528964066420519677106145092918482774343613,\n        10530777752259630125564678480897857853807637120039176813174150229243735996839,\n        20486583726592018813337145844457018474256372770211860618687961310422228379031,\n        12690713110714036569415168795200156516217175005650145422920562694422306200486,\n        17386427286863519095301372413760745749282643730629659997153085139065756667205,\n        2216432659854733047132347621569505613620980842043977268828076165669557467682,\n        6309765381643925252238633914530877025934201680691496500372265330505506717193,\n        20806323192073945401862788605803131761175139076694468214027227878952047793390,\n        4037040458505567977365391535756875199663510397600316887746139396052445718861,\n        19948974083684238245321361840704327952464170097132407924861169241740046562673,\n        845322671528508199439318170916419179535949348988022948153107378280175750024,\n        16222384601744433420585982239113457177459602187868460608565289920306145389382,\n        10232118865851112229330353999139005145127746617219324244541194256766741433339,\n        6699067738555349409504843460654299019000594109597429103342076743347235369120,\n        6220784880752427143725783746407285094967584864656399181815603544365010379208,\n        6129250029437675212264306655559561251995722990149771051304736001195288083309,\n        10773245783118750721454994239248013870822765715268323522295722350908043393604,\n        4490242021765793917495398271905043433053432245571325177153467194570741607167,\n        19596995117319480189066041930051006586888908165330319666010398892494684778526,\n        837850695495734270707668553360118467905109360511302468085569220634750561083,\n        11803922811376367215191737026157445294481406304781326649717082177394185903907,\n        10201298324909697255105265958780781450978049256931478989759448189112393506592,\n        13564695482314888817576351063608519127702411536552857463682060761575100923924,\n        9262808208636973454201420823766139682381973240743541030659775288508921362724,\n        173271062536305557219323722062711383294158572562695717740068656098441040230,\n        18120430890549410286417591505529104700901943324772175772035648111937818237369,\n        20484495168135072493552514219686101965206843697794133766912991150184337935627,\n        19155651295705203459475805213866664350848604323501251939850063308319753686505,\n        11971299749478202793661982361798418342615500543489781306376058267926437157297,\n        18285310723116790056148596536349375622245669010373674803854111592441823052978,\n        7069216248902547653615508023941692395371990416048967468982099270925308100727,\n        6465151453746412132599596984628739550147379072443683076388208843341824127379,\n        16143532858389170960690347742477978826830511669766530042104134302796355145785,\n        19362583304414853660976404410208489566967618125972377176980367224623492419647,\n        1702213613534733786921602839210290505213503664731919006932367875629005980493,\n        10781825404476535814285389902565833897646945212027592373510689209734812292327,\n        4212716923652881254737947578600828255798948993302968210248673545442808456151,\n        7594017890037021425366623750593200398174488805473151513558919864633711506220,\n        18979889247746272055963929241596362599320706910852082477600815822482192194401,\n        13602139229813231349386885113156901793661719180900395818909719758150455500533,\n    ];\n\n    let mut r = 0;\n    for elem in array {\n        let h = mimc(elem, r, constants, exponent);\n        r = r + elem + h;\n    }\n    r\n}\n",
        "path": "std/hash.nr"
      },
      "16": {
        "source": "struct GrumpkinScalar {\n    low: Field,\n    high: Field,\n}\n\nimpl GrumpkinScalar {\n    pub fn new(low: Field, high: Field) -> Self {\n        // TODO: check that the low and high value fit within the grumpkin modulus\n        GrumpkinScalar { low, high }\n    }\n}\n\nglobal GRUMPKIN_SCALAR_SERIALIZED_LEN: Field = 2;\n\npub fn deserialize_grumpkin_scalar(fields: [Field; GRUMPKIN_SCALAR_SERIALIZED_LEN]) -> GrumpkinScalar {\n    GrumpkinScalar { low: fields[0], high: fields[1] }\n}\n\npub fn serialize_grumpkin_scalar(scalar: GrumpkinScalar) -> [Field; GRUMPKIN_SCALAR_SERIALIZED_LEN] {\n    [scalar.low, scalar.high]\n}\n",
        "path": "std/grumpkin_scalar.nr"
      },
      "17": {
        "source": "use crate::grumpkin_scalar::GrumpkinScalar;\nuse crate::scalar_mul::fixed_base_embedded_curve;\n\npub fn grumpkin_fixed_base(scalar: GrumpkinScalar) -> [Field; 2] {\n    // TODO: this should use both the low and high limbs to do the scalar multiplication\n    fixed_base_embedded_curve(scalar.low, scalar.high)\n}\n",
        "path": "std/grumpkin_scalar_mul.nr"
      },
      "21": {
        "source": "\nimpl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n    \n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(_self: Self, _bit_size: u32) -> [u1] {}\n    \n    #[builtin(to_be_bits)]\n    fn __to_be_bits(_self: Self, _bit_size: u32) -> [u1] {}\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n    \n    #[builtin(to_be_radix)]\n    fn __to_be_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n",
        "path": "std/field.nr"
      },
      "35": {
        "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/abi.nr"
      },
      "36": {
        "source": "use crate::constants_gen::GENERATOR_INDEX__CONTRACT_ADDRESS;\nuse crate::hash::pedersen_hash;\n\npub fn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n  pedersen_hash([pub_key_x, pub_key_y, partial_address], GENERATOR_INDEX__CONTRACT_ADDRESS)\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/address.nr"
      },
      "38": {
        "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    blocks_tree_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/context.nr"
      },
      "39": {
        "source": "use dep::std::hash::{pedersen_with_separator, sha256};\nuse crate::constants_gen::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n  let sha256_hashed = sha256(bytes_to_hash);\n\n  // Convert it to a field element\n  let mut v = 1;\n  let mut high = 0 as Field;\n  let mut low = 0 as Field;\n\n  for i in 0..16 {\n      high = high + (sha256_hashed[15 - i] as Field) * v;\n      low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n      v = v * 256;\n  }\n\n  // Abuse that a % p + b % p = (a + b) % p and that low < p\n  let hash_in_a_field = low + high * v;\n\n  hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n  // TODO(#1205) This is probably not the right index to use\n  pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\n#[oracle(pedersenHash)]\nfn pedersen_hash_oracle<N>(_inputs: [Field; N], _hash_index: u32) -> Field {}\n\nunconstrained fn pedersen_hash_internal<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    pedersen_hash_oracle(inputs, hash_index)\n}\n\n// TODO(Kev): We can move this into the noir std-lib \n// as an acir opcode, once we have the pedersen PR merged.\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n  // Temporary hack. This is not right. Kev forced me to do this. Blame him.\n  pedersen_hash_internal(inputs, hash_index)\n  // let input_size = inputs.len();\n  // let mut modified_inputs = [];\n  // modified_inputs = modified_inputs.push_back(input_size as Field);\n  // for i in 0..N {\n  //   modified_inputs = modified_inputs.push_back(inputs[i]);\n  // }\n  // pedersen_with_separator(modified_inputs, hash_index)[0]\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/hash.nr"
      },
      "40": {
        "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse crate::types::point::Point;\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    log: [Field; N],\n) {\n    let _ = oracle::logs::emit_encrypted_log(contract_address, storage_slot, encryption_pub_key, log);\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(\n    context: &mut PublicContext,\n    log: T,\n) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(\n    context: &mut PrivateContext,\n    log: T,\n) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/log.nr"
      },
      "41": {
        "source": "mod l1_to_l2_message;\nmod l1_to_l2_message_getter_data;\n\nuse l1_to_l2_message_getter_data::make_l1_to_l2_message_getter_data;\n\nuse crate::abi::PublicContextInputs;\nuse crate::oracle::get_l1_to_l2_message::get_l1_to_l2_message_call;\n\n\n// Returns the nullifier for the message\npub fn process_l1_to_l2_message(l1_to_l2_root: Field, storage_contract_address: Field, msg_key: Field, content: Field, secret: Field) -> Field{\n\n    let returned_message = get_l1_to_l2_message_call(msg_key);\n    let l1_to_l2_message_data = make_l1_to_l2_message_getter_data(returned_message, 0, secret);\n\n    // Check tree roots against the inputs \n    assert(l1_to_l2_message_data.root == l1_to_l2_root);\n\n    // Validate this is the target contract\n    assert(l1_to_l2_message_data.message.recipient == storage_contract_address);\n\n    // Validate the message hash is correct\n    assert(l1_to_l2_message_data.message.content == content);\n\n    // Validate the message secret is correct\n    l1_to_l2_message_data.message.validate_message_secret();\n\n    // Compute Nullifier\n    l1_to_l2_message_data.message.compute_nullifier()\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/messaging.nr"
      },
      "42": {
        "source": "use crate::constants_gen::{\n    L1_TO_L2_MESSAGE_LENGTH,\n    GENERATOR_INDEX__NULLIFIER,\n    GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\nuse crate::hash::{sha256_to_field, pedersen_hash};\n\nstruct L1ToL2Message {\n    sender: Field,\n    chainId: Field,\n    recipient: Field,\n    version: Field,\n    content: Field,\n    secret: Field,\n    secret_hash: Field,\n    deadline: u32,\n    fee: u64,\n    tree_index: Field\n}\n\nimpl L1ToL2Message {\n    pub fn deserialize(\n        fields: [Field; L1_TO_L2_MESSAGE_LENGTH],\n        secret: Field,\n        tree_index: Field\n    ) -> L1ToL2Message {\n        L1ToL2Message {\n            sender: fields[0],\n            chainId: fields[1],\n            recipient: fields[2],\n            version: fields[3],\n            content: fields[4],\n            secret: secret,\n            secret_hash: fields[5],\n            deadline: fields[6] as u32,\n            fee: fields[7] as u64,\n            tree_index: tree_index\n        }\n    }\n\n    pub fn validate_message_secret(self: Self) {\n        let recomputed_hash = pedersen_hash([self.secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET);\n        assert(self.secret_hash == recomputed_hash);\n    }\n\n    fn message_hash(self: Self) -> Field {\n        let mut hash_bytes: [u8; 256] = [0; 256];\n        let sender_bytes = self.sender.to_be_bytes(32);\n        let chainId_bytes = self.chainId.to_be_bytes(32);\n        let recipient_bytes = self.recipient.to_be_bytes(32);\n        let version_bytes = self.version.to_be_bytes(32);\n        let content_bytes = self.content.to_be_bytes(32);\n        let secret_hash_bytes = self.secret_hash.to_be_bytes(32);\n        let deadline_bytes = (self.deadline as Field).to_be_bytes(32);\n        let fee_bytes = (self.fee as Field).to_be_bytes(32);\n\n        for i in 0..32 {\n            hash_bytes[i] = sender_bytes[i];\n            hash_bytes[i + 32] = chainId_bytes[i];\n            hash_bytes[i + 64] = recipient_bytes[i];\n            hash_bytes[i + 96] = version_bytes[i];\n            hash_bytes[i + 128] = content_bytes[i];\n            hash_bytes[i + 160] = secret_hash_bytes[i];\n            hash_bytes[i + 192] = deadline_bytes[i];\n            hash_bytes[i + 224] = fee_bytes[i];\n        }\n\n        let message_hash = sha256_to_field(hash_bytes);\n        message_hash        \n    }\n\n    // The nullifier of a l1 to l2 message is the hash of the message salted with the secret and tree index\n    // docs:start:l1_to_l2_message_compute_nullifier\n    pub fn compute_nullifier(self: Self) -> Field {\n        let message_hash = self.message_hash();\n        pedersen_hash([message_hash, self.secret, self.tree_index], GENERATOR_INDEX__NULLIFIER)\n    }\n    // docs:end:l1_to_l2_message_compute_nullifier\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/messaging/l1_to_l2_message.nr"
      },
      "43": {
        "source": "use crate::messaging::l1_to_l2_message::L1ToL2Message;\nuse crate::constants_gen::{\n    L1_TO_L2_MSG_TREE_HEIGHT,\n    L1_TO_L2_MESSAGE_LENGTH,\n};\nuse crate::utils::arr_copy_slice;\n\nstruct L1ToL2MessageGetterData {\n    message: L1ToL2Message,\n    sibling_path: [Field; L1_TO_L2_MSG_TREE_HEIGHT],\n    leaf_index: Field,\n    root: Field,\n}\n\npub fn l1_to_l2_message_getter_len() -> Field {\n    L1_TO_L2_MESSAGE_LENGTH + 1 + L1_TO_L2_MSG_TREE_HEIGHT + 1\n}\n\npub fn make_l1_to_l2_message_getter_data<N>(fields: [Field; N], start: Field, secret: Field) -> L1ToL2MessageGetterData {\n    L1ToL2MessageGetterData {\n        message: L1ToL2Message::deserialize(arr_copy_slice(fields, [0; L1_TO_L2_MESSAGE_LENGTH], start), secret, fields[start + L1_TO_L2_MESSAGE_LENGTH]),\n        leaf_index: fields[start + L1_TO_L2_MESSAGE_LENGTH],\n        sibling_path: arr_copy_slice(fields, [0; L1_TO_L2_MSG_TREE_HEIGHT], L1_TO_L2_MESSAGE_LENGTH + 1),\n        root: fields[start + L1_TO_L2_MESSAGE_LENGTH + L1_TO_L2_MSG_TREE_HEIGHT + 1],\n    }\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/messaging/l1_to_l2_message_getter_data.nr"
      },
      "45": {
        "source": "use crate::abi::PublicContextInputs;\nuse crate::context::{\n    PrivateContext,\n    PublicContext,\n};\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_inner_note_hash,\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\nuse crate::constants_gen::EMPTY_NULLIFIED_COMMITMENT;\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n    broadcast: bool,\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    let serialize = note_interface.serialize;\n    let preimage = serialize(*note);\n    assert(notify_created_note(storage_slot, preimage, inner_note_hash) == 0);\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        let broadcast = note_interface.broadcast;\n        broadcast(context, storage_slot, *note);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(\n    context: &mut PrivateContext,\n    note: Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let mut nullifier = 0;\n    let mut nullified_commitment: Field = EMPTY_NULLIFIED_COMMITMENT;\n    let compute_nullifier = note_interface.compute_nullifier;\n    nullifier = compute_nullifier(note);\n\n    // We also need the note commitment corresponding to the \"nullifier\"\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    // `nullified_commitment` is used to inform the kernel which pending commitment\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // commitment) in which case `nullified_commitment` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note commitment computed in `compute_nullifier`?\n        nullified_commitment = compute_inner_note_hash(note_interface, note);\n    }\n    assert(notify_nullified_note(nullifier, nullified_commitment) == 0);\n\n    context.push_new_nullifier(nullifier, nullified_commitment)\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/note/lifecycle.nr"
      },
      "46": {
        "source": "use dep::std::option::Option;\nuse crate::constants_gen::{\n    MAX_READ_REQUESTS_PER_CALL,\n    GET_NOTE_ORACLE_RETURN_LENGTH,\n    GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE,\n    VIEW_NOTE_ORACLE_RETURN_LENGTH,\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\nuse crate::oracle;\nuse crate::types::vec::BoundedVec;\n\nfn check_note_header<Note, N>(\n    context: PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    note: Note,\n) {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    let contract_address = context.this_address();\n    assert(header.contract_address == contract_address);\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(\n    fields: [Field; N],\n    selects: BoundedVec<Option<Select>, N>,\n) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        assert(fields[select.field_index] == select.value, \"Mismatch return note field.\");\n    }\n}\n\nfn check_notes_order<N>(fields_0: [Field; N], fields_1: [Field; N], sorts: BoundedVec<Option<Sort>, N>) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n) -> Note {\n    let note = get_note_internal(storage_slot, note_interface);\n\n    check_note_header(*context, storage_slot, note_interface, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let opt_notes = get_notes_internal(storage_slot, note_interface, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let serialize = note_interface.serialize;\n            let fields = serialize(note);\n            check_note_header(*context, storage_slot, note_interface, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    };\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n) -> Note {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        0,\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        placeholder_note,\n        placeholder_fields,\n    )[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields,\n    );\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteViewerOptions<Note, N>,\n) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields,\n    )\n}\n\nunconstrained fn flatten_options<Note, N>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>,\n) -> (u8, [u8; N], [Field; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            num_selects += 1;\n        };\n    };\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    };\n\n    (num_selects, select_by, select_values, sort_by, sort_order)\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/note/note_getter.nr"
      },
      "48": {
        "source": "use crate::hash::pedersen_hash;\nuse crate::constants_gen::{GENERATOR_INDEX__UNIQUE_COMMITMENT, GENERATOR_INDEX__SILOED_COMMITMENT};\n\npub fn compute_inner_hash(storage_slot: Field, note_hash: Field) -> Field {\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([storage_slot, note_hash], 0)\n}\n\npub fn compute_siloed_hash(contract_address: Field, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address, inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_COMMITMENT)\n}\n\npub fn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_COMMITMENT)\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/note/note_hash.nr"
      },
      "51": {
        "source": "use dep::std::option::Option;\nuse crate::constants_gen::MAX_NOTES_PER_PAGE;\nuse crate::note::note_getter_options::{Select, Sort};\nuse crate::types::vec::BoundedVec;\n\n// docs:start:NoteViewerOptions\nstruct NoteViewerOptions<Note, N> {\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>,\n    limit: u32,\n    offset: u32,\n}\n// docs:end:NoteViewerOptions\n\nimpl<Note, N> NoteViewerOptions<Note, N> {\n    pub fn new() -> NoteViewerOptions<Note, N> {\n        NoteViewerOptions {\n            selects: BoundedVec::new(Option::none()),\n            sorts: BoundedVec::new(Option::none()),\n            limit: MAX_NOTES_PER_PAGE as u32,\n            offset: 0,\n        }\n    }\n\n    pub fn select(&mut self, field_index: u8, value: Field) -> Self {\n        self.selects.push(Option::some(Select::new(field_index, value)));\n        *self\n    }\n\n    pub fn sort(&mut self, field_index: u8, order: u2) -> Self {\n        self.sorts.push(Option::some(Sort::new(field_index, order)));\n        *self\n    }\n\n    pub fn set_limit(&mut self, limit: u32) -> Self {\n        assert(limit <= MAX_NOTES_PER_PAGE as u32);\n        self.limit = limit;\n        *self\n    }\n\n    pub fn set_offset(&mut self, offset: u32) -> Self {\n        self.offset = offset;\n        *self\n    }\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/note/note_viewer_options.nr"
      },
      "52": {
        "source": "use crate::note::{\n    note_hash::{compute_inner_hash, compute_siloed_hash, compute_unique_hash},\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\npub fn compute_inner_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n\n    compute_inner_hash(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let inner_note_hash = compute_inner_note_hash(note_interface, note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\npub fn compute_unique_siloed_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let siloed_note_hash = compute_siloed_note_hash(note_interface, note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_note_hash_for_read_or_nullify<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note_interface, note_with_header)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note_interface, note_with_header)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note_interface, note_with_header)\n    }\n\n}\n\npub fn compute_note_hash_and_nullifier<Note, N, S>(\n    note_interface: NoteInterface<Note, N>,\n    note_header: NoteHeader,\n    preimage: [Field; S],\n) -> [Field; 4] {\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    let mut note = deserialize(arr_copy_slice(preimage, [0; N], 0));\n    set_header(&mut note, note_header);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n    let inner_note_hash = compute_inner_hash(note_header.storage_slot, note_hash);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note);\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/note/utils.nr"
      },
      "54": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/oracle/arguments.nr"
      },
      "58": {
        "source": "\nuse crate::constants_gen::L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH;\n\n// Checks if a msg is within the l1ToL2Msg tree\n#[oracle(getL1ToL2Message)]\nfn get_l1_to_l2_msg_oracle(_msg_key: Field) -> [Field; L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH] {}\n\nunconstrained pub fn get_l1_to_l2_message_call(msg_key: Field) -> [Field; L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH] {\n    get_l1_to_l2_msg_oracle(msg_key)\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/oracle/get_l1_to_l2_message.nr"
      },
      "59": {
        "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: Field) -> [Field; 3] {\n  get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n  let result = get_public_key_and_partial_address_internal(address);\n  let pub_key_x = result[0];\n  let pub_key_y = result[1];\n  let partial_address = result[2];\n  \n  let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n  assert(calculated_address == address);\n  \n  Point::new(pub_key_x, pub_key_y)\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/oracle/get_public_key.nr"
      },
      "60": {
        "source": "use crate::oracle::get_public_key::get_public_key;\nuse crate::types::point::Point;\n\n#[oracle(getSecretKey)]\nfn get_secret_key_oracle(\n    _owner: Point,\n) -> [Field; dep::std::grumpkin_scalar::GRUMPKIN_SCALAR_SERIALIZED_LEN] {\n}\n\nunconstrained fn get_secret_key_internal(owner_public_key: Point) -> dep::std::grumpkin_scalar::GrumpkinScalar {\n    dep::std::grumpkin_scalar::deserialize_grumpkin_scalar(get_secret_key_oracle(owner_public_key))\n}\n\npub fn get_secret_key(owner: Field) -> dep::std::grumpkin_scalar::GrumpkinScalar {\n    let owner_public_key = get_public_key(owner);\n    let secret = get_secret_key_internal(owner_public_key);\n\n    // Constrain the owner - Nullifier secret key is currently just the encryption private key so we can constrain\n    // the owner by deriving the public key from the secret key and checking the result.\n    let computed_public_key = dep::std::grumpkin_scalar_mul::grumpkin_fixed_base(secret);\n    assert(owner_public_key.x == computed_public_key[0]);\n    assert(owner_public_key.y == computed_public_key[1]);\n\n    secret\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/oracle/get_secret_key.nr"
      },
      "62": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/oracle/enqueue_public_function_call.nr"
      },
      "64": {
        "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(\n    _storage_slot: Field,\n    _preimage: [Field; N],\n    _inner_note_hash: Field,\n) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(\n    storage_slot: Field,\n    preimage: [Field; N],\n    inner_note_hash: Field,\n) -> Field {\n    notify_created_note_oracle(storage_slot, preimage, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(\n    _nullifier: Field,\n    _inner_note_hash: Field,\n) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(\n    nullifier: Field,\n    inner_note_hash: Field,\n) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _return_size: u32,\n    _placeholder_fields: [Field; S],\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    mut placeholder_fields: [Field; S],\n)-> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(storage_slot, num_selects, select_by, select_values, sort_by, sort_order, limit, offset, return_size, placeholder_fields)\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n) -> [Option<Note>; S] {\n    let fields = get_notes_oracle_wrapper(storage_slot, num_selects, select_by, select_values, sort_by, sort_order, limit, offset, placeholder_fields);\n    let num_notes = fields[0] as u32;\n    let contract_address = fields[1];\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let preimage = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = deserialize(preimage);\n            set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    };\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(\n    _inner_nullifier: Field,\n) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/oracle/notes.nr"
      },
      "65": {
        "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/oracle/storage.nr"
      },
      "66": {
        "source": "use crate::types::point::Point;\nuse crate::constants_gen::NUM_FIELDS_PER_SHA256;\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(\n    _contract_address: Field,\n    _storage_slot: Field,\n    _encryption_pub_key: Point,\n    _preimage: [Field; N],\n)  -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    preimage: [Field; N],\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(\n        contract_address,\n        storage_slot,\n        encryption_pub_key,\n        preimage,\n    ), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_contract_address: Field, _event_selector: Field, _message: T)  -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(contract_address: Field, event_selector: Field, message: T) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/oracle/logs.nr"
      },
      "68": {
        "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/public_call_stack_item.nr"
      },
      "72": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/state_vars/map.nr"
      },
      "73": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/state_vars/public_state.nr"
      },
      "74": {
        "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse crate::constants_gen::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes},\n    note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\n\n// docs:start:struct\nstruct Set<Note, N> {\n    context: Context,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n}\n// docs:end:struct\n\nimpl<Note, N> Set<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Set {\n            context,\n            storage_slot,\n            note_interface,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:insert\n    pub fn insert(self,\n        note: &mut Note,\n        broadcast: bool,\n    ) {\n        create_note(\n            self.context.private.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:insert\n\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(\n            self.context.public.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert_from_public\n    \n    // DEPRECATED\n    fn assert_contains_and_remove(_self: Self, _note: &mut Note, _nonce: Field) {\n        assert(false, \"`assert_contains_and_remove` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // DEPRECATED\n    fn assert_contains_and_remove_publicly_created(_self: Self, _note: &mut Note) {\n        assert(false, \"`assert_contains_and_remove_publicly_created` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // docs:start:remove\n    pub fn remove(self, note: Note) {\n        let context = self.context.private.unwrap();\n        let note_hash = compute_note_hash_for_read_or_nullify(self.note_interface, note);\n        let has_been_read = context.read_requests.any(|r| r == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(\n            context,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n    ) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n        let storage_slot = self.storage_slot;\n        let opt_notes = get_notes(\n            self.context.private.unwrap(),\n            storage_slot,\n            self.note_interface,\n            options,\n        );\n        opt_notes\n    }\n    // docs:end:get_notes\n\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>,\n    ) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n        view_notes(self.storage_slot, self.note_interface, options)\n    }\n    // docs:end:view_notes\n}\n",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/state_vars/set.nr"
      },
      "79": {
        "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/types/vec.nr"
      },
      "85": {
        "source": "pub fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}",
        "path": "/home/jpag/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.11.0/yarn-project/aztec-nr/aztec/src/utils.nr"
      },
      "89": {
        "source": "use dep::aztec::{\n    context::PrivateContext,\n    log::emit_encrypted_log,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_note_hash_for_read_or_nullify,\n    },\n    oracle::{\n        get_secret_key::get_secret_key,\n        get_public_key::get_public_key,\n    }\n};\n\nglobal STAMP_SERIALIZED_NOTE_LEN: Field = 3;\n\nstruct StampNote {\n    owner: Field,\n    // type of stamp\n    stamp_type: u8,\n    // timestamp of when the stamp was issued\n    // timestamp: Field,\n    data: Field,\n    header: NoteHeader\n}\n\nimpl StampNote {\n    pub fn new(owner: Field, stamp_type: u8, data: Field) -> Self {\n        Self { owner, stamp_type, data, header: NoteHeader::empty() }\n    }\n\n    fn serialize(self) -> [Field; STAMP_SERIALIZED_NOTE_LEN] {\n        [\n            self.owner,\n            self.stamp_type as Field,\n            self.data,\n        ]\n    }\n\n    fn deserialize(preimage: [Field; STAMP_SERIALIZED_NOTE_LEN]) -> Self {\n        StampNote {\n            owner: preimage[0],\n            stamp_type: preimage[1] as u8,\n            data: preimage[2],\n            header: NoteHeader::empty()\n        }\n    }\n\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen(self.serialize())[0]\n    }\n\n    fn compute_nullifier(self) -> Field {\n        let siloed_note_hash = compute_note_hash_for_read_or_nullify(StampNoteMethods, self);\n        let secret = get_secret_key(self.owner);\n        dep::std::hash::pedersen([\n            siloed_note_hash,\n            secret.low,\n            secret.high\n        ])[0]\n    }\n\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    // Broadcasts the note as an encrypted log on L1.\n    pub fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\nfn deserialize(preimage: [Field; STAMP_SERIALIZED_NOTE_LEN]) -> StampNote {\n    StampNote::deserialize(preimage)\n}\n\nfn serialize(note: StampNote) -> [Field; STAMP_SERIALIZED_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: StampNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: StampNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: StampNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut StampNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: StampNote) {\n    note.broadcast(context, slot);\n}\n\nglobal StampNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast\n};\n",
        "path": "/home/jpag/Workground/aztec/zybil/contracts/l2/src/types/stamp_note.nr"
      },
      "90": {
        "source": "use dep::aztec::{\n    constants_gen::MAX_NOTES_PER_PAGE,\n    hash::sha256_to_field,\n};\nuse dep::std::option::Option;\nuse crate::types::stamp_note::StampNote;\n\nmod STAMP_ID {\n    global ETHEREUM: u8 = 1;\n    global ENS: u8 = 2;\n    global GOOGLE: u8 = 3;\n    global DISCORD: u8 = 4;\n    global GITHUB: u8 = 5;\n}\n\nmod STAMP_SCORE {\n    global ETHEREUM: u8 = 7;\n    global ENS: u8 = 24;\n    global GOOGLE: u8 = 4;\n    global DISCORD: u8 = 2;\n    global GITHUB: u8 = 15;  \n}\n\npub fn get_ens_stamp_private_content_hash(\n    secret_redemption_hash: Field,\n    name: Field,\n    timestamp: Field,\n    canceller: Field\n) -> Field {\n    // 132 = 32 * 4 + 4\n    let mut hash_bytes: [u8; 132] = [0; 132];\n    let secret_hash_bytes = secret_redemption_hash.to_be_bytes(32);\n    let name_bytes = name.to_be_bytes(32);\n    let timestamp_bytes = timestamp.to_be_bytes(32);\n    let canceller_bytes = canceller.to_be_bytes(32);\n\n    // insert into bytes array\n    for i in 0..32 {\n        hash_bytes[i + 4] = secret_hash_bytes[i];\n        hash_bytes[i + 36] = name_bytes[i];\n        hash_bytes[i + 68] = timestamp_bytes[i];\n        hash_bytes[i + 100] = canceller_bytes[i];\n    }\n\n    // ethers.id(\"stamp_ens(bytes32,bytes32,uint256,address)\").slice(0, 10)\n    hash_bytes[0] = 0x5e;\n    hash_bytes[1] = 0x8d;\n    hash_bytes[2] = 0x7e;\n    hash_bytes[3] = 0x7e;\n\n    sha256_to_field(hash_bytes)\n}\n\n// pub fn get_attestation_content_hash(\n//     recipient: Field,\n//     caller_on_l1: Field,\n// )\n\n// pub fn compute_attestation_merkle_root([Option<StampNote>; MAX_NOTES_PER_PAGE]) -> [Field; MAX_NOTES_PER_PAGE] {\n//     let notes = storage.stamps.at(owner.address).view_notes(options);\n// }\npub fn filter_eth_address_stamp(notes: [Option<StampNote>; MAX_NOTES_PER_PAGE]) -> [Option<StampNote>; 1] {\n    let mut eth_stamp_ret = [Option::none(); 1];\n    for i in 0..notes.len() {\n        if notes[i].is_some() {\n            let stamp = notes[i].unwrap_unchecked();\n            if stamp.stamp_type == STAMP_ID::ETHEREUM {\n                eth_stamp_ret[0] = notes[i];\n            }\n        }\n    }\n    eth_stamp_ret\n}\n",
        "path": "/home/jpag/Workground/aztec/zybil/contracts/l2/src/util.nr"
      }
    }
  }
}